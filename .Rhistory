require(openxlsx)
install.packages(c("acepack", "BH", "cairoDevice", "chron", "cluster", "codetools", "colorspace", "curl", "data.table", "date", "DBI", "digest", "dplyr", "foreign", "geepack", "ggplot2", "git2r", "Hmisc", "htmlwidgets", "httr", "installr", "jsonlite", "knitr", "lattice", "lubridate", "Matrix", "mgcv", "mime", "nlme", "openssl", "pbkrtest", "plotly", "plyr", "R6", "Rcpp", "RcppEigen", "reshape2", "rmarkdown", "scales", "SparseM", "splines2", "stringi", "stringr", "survival", "swirl", "tibble", "tidyr", "viridisLite", "XML", "yaml"))
require(openxlsx)
library("swirl", lib.loc="C:/Program Files/R/R-3.3.3/library")
swirl()
install_course()
install_course()
swirl()
swirl()
qt(c(.025,.075),9)
qt(c(.025,.075),9)*1100
qt(c(.025,.075),9)*30 +1100
qt(c(.025,.075),8)*30 +1100
qt(c(.025,.975),)*30 +1100
qt(c(.025,.975),9)*30 +1100
qt(c(.025,.975),9)
qt(c(.025,.975),9)*.3 -2
qt(c(.025,.975),9)*1.5 -2
qt(c(.025,.975),9)*2.1/3 -2
qt(c(.025,.975),9)*2.1/(8**(1/2)) -2
qt(c(.025,.975),9)*2.6/(8**(1/2)) -2
Y <- 3
sy <- .6
X <- 5
sx <- .68
sp <- sqrt((sx^2 + sy^2)/2)
Y-X + qt((.025,.975),18)*sp*sqrt(1/5)
Y-X + qt(c(.025,.975),18)*sp*sqrt(1/5)
sp <- sqrt((sx + sy)/2)
Y-X + qt(c(.025,.975),18)*sp*sqrt(1/5)
Y <- 4
vy <- .5
X <- 6
vx <- 2
sp <- sqrt((vx + vy)/50)
Y-X + c(-1,1)*1.64*sp
X-Y + c(-1,1)*1.64*sp
Y <- -3
sy <- 1.5
X <- 1
sx <- 1.8
sp <- sqrt((sx^2 + sy^2)/2)
Y-X + qt(c(.05,.95),16)*sp*(2/9)^2
Y-X + qt(c(.05,.95),16)*sp*sqrt(2/9)
1100 + qt(c(.025,.975),8)*30
1100 + qt(c(.025,.975),8)*30/3
x <- c(140,138,150,148,135)
y <- c(132,135,151,146,130)
test <- t.test(x,y,paired=TRUE,alt="two.sided")
1100 + qt(c(.025,.975),8)*10
library("swirl", lib.loc="C:/Program Files/R/R-3.4.0/library")
swirl()
install_course("Statistical Inference")
install_course_zip("~/Downloads/swirl_courses-master.zip", multi=TRUE, which_course="Statistical Inference")
install_course_zip("C:/Users/wilkinson_r/Downloads/swirl_courses-master.zip", multi=TRUE, which_course="Statistical Inference")
swirl()
library("swirl", lib.loc="C:/Program Files/R/R-3.4.0/library")
swirl()
swirl()
detach("package:swirl", unload=TRUE)
library("swirl", lib.loc="C:/Program Files/R/R-3.4.0/library")
swirl()
install.packages(c("assertthat", "backports", "boot", "car", "caret", "checkmate", "curl", "DBI", "devtools", "dplyr", "evaluate", "foreign", "formatR", "Formula", "gdata", "git2r", "gWidgetsRGtk2", "Hmisc", "htmltools", "htmlwidgets", "installr", "jsonlite", "knitr", "lme4", "markdown", "Matrix", "memoise", "mgcv", "openxlsx", "plotly", "purrr", "quantreg", "R6", "Rcpp", "RcppEigen", "RGtk2", "rmarkdown", "SparseM", "stringi", "tibble", "tidyr", "withr", "XML"))
install.packages(c("assertthat", "backports", "boot", "car", "caret", "checkmate", "curl", "DBI", "devtools", "dplyr", "evaluate", "foreign", "formatR", "Formula", "gdata", "git2r", "gWidgetsRGtk2", "Hmisc", "htmltools", "htmlwidgets", "installr", "jsonlite", "knitr", "lme4", "markdown", "Matrix", "memoise", "mgcv", "openxlsx", "plotly", "purrr", "quantreg", "R6", "Rcpp", "RcppEigen", "RGtk2", "rmarkdown", "SparseM", "stringi", "tibble", "tidyr", "withr", "XML"))
install.packages(c("assertthat", "backports", "boot", "car", "caret", "checkmate", "curl", "DBI", "devtools", "dplyr", "evaluate", "foreign", "formatR", "Formula", "gdata", "git2r", "gWidgetsRGtk2", "Hmisc", "htmltools", "htmlwidgets", "installr", "jsonlite", "knitr", "lme4", "markdown", "Matrix", "memoise", "mgcv", "openxlsx", "plotly", "purrr", "quantreg", "R6", "Rcpp", "RcppEigen", "RGtk2", "rmarkdown", "SparseM", "stringi", "tibble", "tidyr", "withr", "XML"))
install.packages(c("assertthat", "backports", "boot", "car", "caret", "checkmate", "curl", "DBI", "devtools", "dplyr", "evaluate", "foreign", "formatR", "Formula", "gdata", "git2r", "gWidgetsRGtk2", "Hmisc", "htmltools", "htmlwidgets", "installr", "jsonlite", "knitr", "lme4", "markdown", "Matrix", "memoise", "mgcv", "openxlsx", "plotly", "purrr", "quantreg", "R6", "Rcpp", "RcppEigen", "RGtk2", "rmarkdown", "SparseM", "stringi", "tibble", "tidyr", "withr", "XML"))
library("swirl", lib.loc="C:/Program Files/R/R-3.4.0/library")
swirl()
swirl()
ppois(10,17.87)
xbar <- -3
ybar <- 1
sx <- 1.5
sy <- 1.8
nx <- 9
ny <- 9
sp <- sqrt((sx^2 + sy^2)/2)
pnorm(xbar-ybar,sd=sp)
mean(c(1077,1123))
pnorm(1100, mean=1078,sd=34.5)
power.t.test(n=100,delta=-.01,sd=.04,alt="one.sided")
power.t.test(n=100,delta=.01,sd=.04,alt="one.sided")
power.t.test(power=.9,delta=.01,sd=.04,alt="one.sided")
power.t.test(power=.9,delta=-.01,sd=.04,alt="one.sided")
power.t.test(power=.9,delta=.01,sd=.04,alt="one.sided",type="paired")
power.t.test(n=100,delta=.01,sd=.04,alt="one.sided",type="paired")
pnorm(xbar-ybar,sd=sp/3)
install.packages("UsingR")
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mean(x*w)
xw <- x*w
mu <- sum(xw)/sum(w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
reg <- lm(y~x - 1)
data(mtcars)
library("datasets", lib.loc="C:/Program Files/R/R-3.4.0/library")
data(mtcars)
mpg
reg2 <- lm(mpg ~ wt)
reg2 <- lm(mpg ~ wt, data=mtcars)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mx <- mean(x)
sdx <- sd(x)
nx1 <- (8.58 - mx)/sdx
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
reg <- lm(y ~ x)
mean(x)
data(mtcars)
detach("package:datasets", unload=TRUE)
library("datasets", lib.loc="C:/Program Files/R/R-3.4.0/library")
reg <- lm(mpg~wt+cyl)
reg <- lm(mpg~wt+cyl,data=mtcars)
summary(reg)
reg2 <- lm(mpg~wt +factor(cyl))
reg2 <- lm(mpg~wt +factor(cyl),data=mtcars)
summary(reg2)
reg3 <- lm(mpg~cyl,data=mtcars)
summary(reg3)
reg4 <- lm(mpg~factor(cyl),data=mtcars)
summary(reg4)
reg5 <- lm(mpg ~ wt*factor(cyl),data=mtcars)
summary(reg5)
summary(reg2)
reg5
anova(reg2,reg5)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
mod <- lm(y~x)
hatvalues(mod)
dfbeta(mod)
plot(x,y)
plot(mod)
dfbetas(mod)
require(mass)
data(shuttle)
require(MASS)
data(shuttle)
shuttle
View(shuttle)
autolander <- shuttle$use == "auto"
ss <- cbind(shuttle,autolander)
fit1 <- glm(autolander ~ wind, family=binomial(logit),data=ss)
summary(fit1)
predict(fit1)
predict(fit1,newdata=data.frame(wind=c("head","tail")))
logodds <- predict(fit1,newdata=data.frame(wind=c("head","tail")))
odds <- exp(logodds)
1/odds
fit2 <- glm(autolander ~ wind + magn, family=binomial(logit),data=ss)
summary(fit2)
logodds2 <- predict(fit2,newdata=data.frame(wind=c("head","tail")))
odds2 <- exp(logodds2)
odds2
logodds2 <- predict(fit2,newdata=data.frame(wind=c("head","tail"),magn="Light"))
odds2 <- exp(logodds2)
odds2
stest <- 1 - numeric(autolander)
stest <- 1 - as.integer(autolander)
rbind(autolander, stest)
ss <- cbind(ss,stest)
fit3 <- glm(stest ~ wind, family=binomial(logit),data=ss)
summary(fit3)
data("InsectSprays")
fit4 <- glm(count~spray, family=poisson,data=InsectSprays)
summary(fit4)
exp(0.05588)
exp(2.67415)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
m <- cbind(x,y)
View(m)
kt <- (x > 0)*x
kt
plot(x,y)
fit5 <- lm(y~ cbind(x,kt))
plot(fit5)
plot(fit5)
summary(fit5)
fit6 <- lm(y~x+kt)
summary(fit6)
plot(fit6)
plot(fit6)
yhat <- predict(fit6)
plot(x,yhat)
lines(x,y,colors="blue")
exp(0.03181)
exp(-0.03181)
exp(3.201e-02)
exp(-3.201e-02)
exp(-0.05588)
library("MicroStrategyR", lib.loc="C:/Program Files/R/R-3.4.0/library")
deployR()
deployR()
deployR()
deployR()
library("MicroStrategyR", lib.loc="C:/Program Files/R/R-3.4.0/library")
deployR()
load("J:/Analytics Projects/Home Parenteral Nutrition QI/Data/Jan 4 2018 Export/HPN_akshith.RData")
View(this.dat5)
View(liver.df)
library(Hmisc)
library(dplyr)
library(Hmisc)
library(dplyr)
library(Hmisc)
library(dplyr)
#Read Data
data=read.csv('NEW2HomePNDatabaseAL_DATA_2018-01-04_1545_liver.csv')
setwd("J:/Analytics Projects/Home Parenteral Nutrition QI/Data/Jan 4 2018 Export")
#Read Data
data=read.csv('NEW2HomePNDatabaseAL_DATA_2018-01-04_1545_liver.csv')
label(data$mrn)="BCH Medical Record Number"
label(data$redcap_repeat_instrument)="Repeat Instrument"
label(data$redcap_repeat_instance)="Repeat Instance"
label(data$liver_date)="Date of measurement"
label(data$liver_time)="Time of measurement"
label(data$inr_rge)="Exact INR value known?"
label(data$inr_val)="INR (value)"
label(data$ggtp_rge)="GGTP (range)"
label(data$ggtp_unitl)="GGTP (value)"
label(data$ast_rge)="AST (range)"
label(data$ast_unitl)="AST (value)"
label(data$alt_rge)="ALT (range)"
label(data$alt_unitl)="ALT (value)"
label(data$dbili_rge)="Direct Bilirubin (range)"
label(data$dbili_mgdl)="Direct Bilirubin (value)"
label(data$tbili_rge)="Total Bilirubin (range)"
label(data$tbili_gdl)="Total Bilirubin (value)"
label(data$trigf_mgdl)="Triglycerides - fasting (value)"
label(data$trig_mgdl)="Triglycerides - non-fasting (value)"
label(data$cholf_mgdl)="Cholesterol - fasting (value)"
label(data$chol_mgdl)="Cholesterol - non-fasting (value)"
label(data$hdlf_mgdl)="HDL - fasting (value)"
label(data$hdl_mgdl)="HDL - non-fasting (value)"
label(data$ldlf_mgdl)="LDL - fasting (value)"
label(data$ldl_mgdl)="LDL - non-fasting (value)"
label(data$vldl_mgdl)="VLDL - fasting (value)"
label(data$crp_rge)="CRP (range)"
label(data$crp_mgdl)="CRP (value)"
label(data$mead_nmolml)="Mead Acid Level"
label(data$ttratio)="T/T Ratio"
label(data$platelet)="Platelets"
label(data$alkphos)="Alkaline phosphatase"
label(data$epa)="EPA,C20:5w3"
label(data$dha)="DHA,C22:6w3"
label(data$arachacid)="Arachidonic Acid,C20:4w6"
label(data$alinoacid)="a-Linolenic Acid,C18:3w3"
label(data$linoacid)="Linoleic Acid,C18:2w6"
label(data$liver_disease_complete)="Complete?"
#Setting Units
#Setting Factors(will create new variable for factors)
data$redcap_repeat_instrument.factor = factor(data$redcap_repeat_instrument,levels=c("active_on_service","central_line","inpatient_encounters","bloodstream_infections","nutrition_intake","growth_data","liver_disease","outpatient_encounters","interventions"))
data$inr_rge.factor = factor(data$inr_rge,levels=c("1","2","3","-8"))
data$ggtp_rge.factor = factor(data$ggtp_rge,levels=c("1","2","-8"))
data$ast_rge.factor = factor(data$ast_rge,levels=c("1","2","-8"))
data$alt_rge.factor = factor(data$alt_rge,levels=c("1","2","-8"))
data$dbili_rge.factor = factor(data$dbili_rge,levels=c("1","2","-8"))
data$tbili_rge.factor = factor(data$tbili_rge,levels=c("1","2","-8"))
data$crp_rge.factor = factor(data$crp_rge,levels=c("1","2","-8"))
data$liver_disease_complete.factor = factor(data$liver_disease_complete,levels=c("0","1","2"))
levels(data$redcap_repeat_instrument.factor)=c("Active On Service","Central Line","Inpatient Encounters","Bloodstream Infections","Nutrition Intake","Growth Data","Liver Disease","Outpatient Encounters","Interventions")
levels(data$inr_rge.factor)=c("Yes","<  1.00",">10.00","N/A")
levels(data$ggtp_rge.factor)=c("<  3","â¥ 3","N/A")
levels(data$ast_rge.factor)=c("<  5","â¥ 5","N/A")
levels(data$alt_rge.factor)=c("<  5","â¥ 5","N/A")
levels(data$dbili_rge.factor)=c("<  0.1","â¥ 0.1","N/A")
levels(data$tbili_rge.factor)=c("< 0.1","â¥ 0.1","N/A")
levels(data$crp_rge.factor)=c("< 0.03","â¥ 0.03","N/A")
levels(data$liver_disease_complete.factor)=c("Incomplete","Unverified","Complete")
data <- filter(data, data$redcap_repeat_instrument!="")
data$liver_date <- as.Date(data$liver_date)
liver.df <- data
rm(data)
targetmrn <- 352
this.dat5 <- liver.df[liver.df$mrn==targetmrn,]
this.dat1 <- active.df[active.df$mrn==targetmrn,]
this.dat2 <- central_line.df[central_line.df$mrn==targetmrn,]
this.dat3 <- inpatients.df[inpatients.df$mrn==targetmrn,]
this.dat4 <- blood_infections.df[blood_infections.df$mrn==targetmrn &
blood_infections.df$bcx_site==1 &
blood_infections.df$clabsi_commun==1,]
this.dat5 <- liver.df[liver.df$mrn==targetmrn,]
this.dat6 <- growth.df[growth.df$mrn==targetmrn,]
this.dat7 <- outpatients.df[outpatients.df$mrn==targetmrn,]
# firstdate <- min(this.dat1$svc_start,this.dat2$insert_date,this.dat3$hosp_admitdt,this.dat4$bcx_date,na.rm=T) --reciprocating the above variables in this below
firstdate <- min(this.dat1$svc_start,this.dat2$insert_date,this.dat3$hosp_admitdt,this.dat4$bcx_date,this.dat5$liver_date,na.rm=T)
if(!exists("data_export_date"))   stop( "data_export_date does not exist.")
else if (is.na(data_export_date)) stop("data_export_date is NA.")
lastdate <- data_export_date
ndays <- lastdate - firstdate + 1
if (ndays < 1) return( NULL )
caldate <- firstdate:lastdate
patient_daily.df <- data.frame(mrn=targetmrn,caldate=as.Date(caldate,"1970-01-01"),
isactive=0,newhpn=0,admit=0,centline=0,nothosp=1,bloodinf=0,liver=0,
death=0,transfer=0,weanoff=0,remclabsi=0)
## if (length(this.dat1$active_mrn)>0) {
# if (length(this.dat1$mrn)>0) {
#         for (svcstart in this.dat1$svc_start) {
#                 n <- length(this.dat1[this.dat1$svc_start==svcstart,"active_current"]==0)
#                 if (n > 1) {
#                         warning(paste("OMITTING mrn",targetmrn, "because found", n, "records for same service start date:",
#                                       as.Date(svcstart,"1970-01-01") ))
#                         return( NULL )
#                 }
#                 if (this.dat1[this.dat1$svc_start==svcstart,"active_current"]==0) {
#
#                         svcstop <- this.dat1[this.dat1$svc_start==svcstart,"svc_stop"]
#
#                         if (!is.na(this.dat1[this.dat1$svc_start==svcstart, "end_type"])) {
#
#                         if (this.dat1[this.dat1$svc_start==svcstart, "end_type"]==1)
#                                 patient_daily.df[patient_daily.df$caldate==svcstop, "transfer"] <- 1
#
#                         else if (this.dat1[this.dat1$svc_start==svcstart, "end_type"]==2)
#                                 patient_daily.df[patient_daily.df$caldate==svcstop, "weanoff"] <- 1
#
#                         else if (this.dat1[this.dat1$svc_start==svcstart, "end_type"]==4)
#                                 patient_daily.df[patient_daily.df$caldate==svcstop, "death"] <- 1
#                         }
#                 }
#                 else svcstop <- lastdate
#                 patient_daily.df[patient_daily.df$caldate %in% svcstart:svcstop,"isactive"] <- 1
#         }
#
#         firstdayhome <- this.dat1[this.dat1$st_start==1,"svc_start"]
#         lfdh <- length(firstdayhome)
#         if (lfdh > 0)
#                 patient_daily.df[patient_daily.df$caldate %in% firstdayhome[lfdh]:(min(firstdayhome[lfdh]+29,lastdate)), "newhpn"] <- 1
# }
#
# ## if (length(this.dat2$cvc_mrn)>0)
# if (length(this.dat2$mrn)>0)
#         for(cvcinsert in this.dat2$insert_date){
#                 n <- length(this.dat2[this.dat2$insert_date==cvcinsert,'remove'] == 1)
#                 if (n > 1) {
#                         warning(paste("OMITTING mrn",targetmrn, "because found", n, "records for same line insert date:",
#                                       as.Date(cvcinsert,"1970-01-01") ))
#                         return( NULL )
#                 }
#                 else if (this.dat2[this.dat2$insert_date==cvcinsert,"remove"]==1) {
#                         cvcremove <- this.dat2[this.dat2$insert_date==cvcinsert,"remove_date"]
#
#                         if (this.dat2[this.dat2$insert_date==cvcinsert, "remove_type___clabsi"]==1)
#                                 patient_daily.df[patient_daily.df$caldate==cvcremove, "remclabsi"] <- 1
#                 }
#                 else cvcremove <- lastdate
#                 patient_daily.df[patient_daily.df$caldate %in% cvcinsert:cvcremove,"centline"] <- 1
#         }
#
# ## if (length(this.dat3$inpt_mrn)>0)
# if (length(this.dat3$mrn)>0)
#         for(admitdate in this.dat3$hosp_admitdt){
#                 n <- length(this.dat3[this.dat3$hosp_admitdt==admitdate,"hosp_discharge"]==1)
#                 if (n > 1) {
#                         warning(paste("OMITTING mrn",targetmrn, "because found", n, "records for same hospital admit date:",
#                                       as.Date(admitdate,"1970-01-01") ))
#                         return( NULL )
#                 }
#                 else if (this.dat3[this.dat3$hosp_admitdt==admitdate,"hosp_discharge"]==1)
#                         dischargedate <- this.dat3[this.dat3$hosp_admitdt==admitdate,"hosp_dischargedt"]
#                 else dischargedate <- lastdate
#                 patient_daily.df[patient_daily.df$caldate %in% admitdate:dischargedate,"nothosp"] <- 0
#                 patient_daily.df[patient_daily.df$caldate==admitdate,"admit"] <- 1
#         }
#
# ## if (length(this.dat4$bld_mrn)>0)
# if (length(this.dat4$mrn)>0)
#   patient_daily.df[patient_daily.df$caldate %in% this.dat4$bcx_date,"bloodinf"] <- 1
if (length(this.dat5$mrn)>0)
patient_daily.df[patient_daily.df$caldate %in% this.dat5$liver_date,"liver"] <- 1
if(!exists("data_export_date"))   stop( "data_export_date does not exist.")
else if (is.na(data_export_date)) stop("data_export_date is NA.")
if(!exists("data_export_date"))   stop( "data_export_date does not exist.")
else {if (is.na(data_export_date)) stop("data_export_date is NA.")}
if(!exists("data_export_date"))   stop( "data_export_date does not exist.") else {if (is.na(data_export_date)) stop("data_export_date is NA.")}
this.dat1 <- active.df[active.df$mrn==targetmrn,]
this.dat2 <- central_line.df[central_line.df$mrn==targetmrn,]
this.dat3 <- inpatients.df[inpatients.df$mrn==targetmrn,]
this.dat4 <- blood_infections.df[blood_infections.df$mrn==targetmrn &
blood_infections.df$bcx_site==1 &
blood_infections.df$clabsi_commun==1,]
this.dat5 <- liver.df[liver.df$mrn==targetmrn,]
this.dat6 <- growth.df[growth.df$mrn==targetmrn,]
this.dat7 <- outpatients.df[outpatients.df$mrn==targetmrn,]
# firstdate <- min(this.dat1$svc_start,this.dat2$insert_date,this.dat3$hosp_admitdt,this.dat4$bcx_date,na.rm=T) --reciprocating the above variables in this below
firstdate <- min(this.dat1$svc_start,this.dat2$insert_date,this.dat3$hosp_admitdt,this.dat4$bcx_date,this.dat5$liver_date,na.rm=T)
if(!exists("data_export_date"))   stop( "data_export_date does not exist.") else {if (is.na(data_export_date)) stop("data_export_date is NA.")}
lastdate <- data_export_date
ndays <- lastdate - firstdate + 1
if (ndays < 1) return( NULL )
caldate <- firstdate:lastdate
patient_daily.df <- data.frame(mrn=targetmrn,caldate=as.Date(caldate,"1970-01-01"),
isactive=0,newhpn=0,admit=0,centline=0,nothosp=1,bloodinf=0,liver=0,
death=0,transfer=0,weanoff=0,remclabsi=0)
## if (length(this.dat1$active_mrn)>0) {
# if (length(this.dat1$mrn)>0) {
#         for (svcstart in this.dat1$svc_start) {
#                 n <- length(this.dat1[this.dat1$svc_start==svcstart,"active_current"]==0)
#                 if (n > 1) {
#                         warning(paste("OMITTING mrn",targetmrn, "because found", n, "records for same service start date:",
#                                       as.Date(svcstart,"1970-01-01") ))
#                         return( NULL )
#                 }
#                 if (this.dat1[this.dat1$svc_start==svcstart,"active_current"]==0) {
#
#                         svcstop <- this.dat1[this.dat1$svc_start==svcstart,"svc_stop"]
#
#                         if (!is.na(this.dat1[this.dat1$svc_start==svcstart, "end_type"])) {
#
#                         if (this.dat1[this.dat1$svc_start==svcstart, "end_type"]==1)
#                                 patient_daily.df[patient_daily.df$caldate==svcstop, "transfer"] <- 1
#
#                         else if (this.dat1[this.dat1$svc_start==svcstart, "end_type"]==2)
#                                 patient_daily.df[patient_daily.df$caldate==svcstop, "weanoff"] <- 1
#
#                         else if (this.dat1[this.dat1$svc_start==svcstart, "end_type"]==4)
#                                 patient_daily.df[patient_daily.df$caldate==svcstop, "death"] <- 1
#                         }
#                 }
#                 else svcstop <- lastdate
#                 patient_daily.df[patient_daily.df$caldate %in% svcstart:svcstop,"isactive"] <- 1
#         }
#
#         firstdayhome <- this.dat1[this.dat1$st_start==1,"svc_start"]
#         lfdh <- length(firstdayhome)
#         if (lfdh > 0)
#                 patient_daily.df[patient_daily.df$caldate %in% firstdayhome[lfdh]:(min(firstdayhome[lfdh]+29,lastdate)), "newhpn"] <- 1
# }
#
# ## if (length(this.dat2$cvc_mrn)>0)
# if (length(this.dat2$mrn)>0)
#         for(cvcinsert in this.dat2$insert_date){
#                 n <- length(this.dat2[this.dat2$insert_date==cvcinsert,'remove'] == 1)
#                 if (n > 1) {
#                         warning(paste("OMITTING mrn",targetmrn, "because found", n, "records for same line insert date:",
#                                       as.Date(cvcinsert,"1970-01-01") ))
#                         return( NULL )
#                 }
#                 else if (this.dat2[this.dat2$insert_date==cvcinsert,"remove"]==1) {
#                         cvcremove <- this.dat2[this.dat2$insert_date==cvcinsert,"remove_date"]
#
#                         if (this.dat2[this.dat2$insert_date==cvcinsert, "remove_type___clabsi"]==1)
#                                 patient_daily.df[patient_daily.df$caldate==cvcremove, "remclabsi"] <- 1
#                 }
#                 else cvcremove <- lastdate
#                 patient_daily.df[patient_daily.df$caldate %in% cvcinsert:cvcremove,"centline"] <- 1
#         }
#
# ## if (length(this.dat3$inpt_mrn)>0)
# if (length(this.dat3$mrn)>0)
#         for(admitdate in this.dat3$hosp_admitdt){
#                 n <- length(this.dat3[this.dat3$hosp_admitdt==admitdate,"hosp_discharge"]==1)
#                 if (n > 1) {
#                         warning(paste("OMITTING mrn",targetmrn, "because found", n, "records for same hospital admit date:",
#                                       as.Date(admitdate,"1970-01-01") ))
#                         return( NULL )
#                 }
#                 else if (this.dat3[this.dat3$hosp_admitdt==admitdate,"hosp_discharge"]==1)
#                         dischargedate <- this.dat3[this.dat3$hosp_admitdt==admitdate,"hosp_dischargedt"]
#                 else dischargedate <- lastdate
#                 patient_daily.df[patient_daily.df$caldate %in% admitdate:dischargedate,"nothosp"] <- 0
#                 patient_daily.df[patient_daily.df$caldate==admitdate,"admit"] <- 1
#         }
#
# ## if (length(this.dat4$bld_mrn)>0)
# if (length(this.dat4$mrn)>0)
#   patient_daily.df[patient_daily.df$caldate %in% this.dat4$bcx_date,"bloodinf"] <- 1
if (length(this.dat5$mrn)>0)
patient_daily.df[patient_daily.df$caldate %in% this.dat5$liver_date,"liver"] <- 1
View(patient_daily.df)
